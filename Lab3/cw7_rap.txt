Aby pomierzyć czas wykonywania się kolejnych operacji podczas debugowania kodu programem strace można
użyc flagi -r która pokazuje relatywny czas wykonania każdej operacji:

strace -r ./a.out 
     0.000000 execve("./a.out", ["./a.out"], 0x7ffdb2e3a7f8 /* 72 vars */) = 0
     0.000443 brk(NULL)                 = 0x55ca3c68c000
     0.000028 arch_prctl(0x3001 /* ARCH_??? */, 0x7ffe74375b60) = -1 EINVAL (Invalid argument)
     0.000164 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
     0.000141 openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 6
     0.000066 fstat(6, {st_mode=S_IFREG|0644, st_size=118032, ...}) = 0
     0.000045 mmap(NULL, 118032, PROT_READ, MAP_PRIVATE, 6, 0) = 0x7ff0d1b28000
     0.000035 close(6)                  = 0
     0.000085 openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 6
     0.000060 read(6, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\360r\2\0\0\0\0\0"..., 832) = 832
     0.000045 lseek(6, 64, SEEK_SET)    = 64
     0.000062 read(6, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784) = 784
     0.000124 lseek(6, 848, SEEK_SET)   = 848
     0.000043 read(6, "\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0", 32) = 32
     0.000060 lseek(6, 880, SEEK_SET)   = 880
     0.000037 read(6, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\313\351\317\363\304;\227\2279\257\26\201\266\32=X"..., 68) = 68
     0.000037 fstat(6, {st_mode=S_IFREG|0755, st_size=2025032, ...}) = 0
     0.000041 mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ff0d1b26000
     0.000047 lseek(6, 64, SEEK_SET)    = 64
     0.000029 read(6, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784) = 784
     0.000033 lseek(6, 848, SEEK_SET)   = 848
     0.000027 read(6, "\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0", 32) = 32
     0.000033 lseek(6, 880, SEEK_SET)   = 880
     0.000026 read(6, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\313\351\317\363\304;\227\2279\257\26\201\266\32=X"..., 68) = 68
     0.000033 mmap(NULL, 2032984, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0x7ff0d1935000
     0.000037 mmap(0x7ff0d195a000, 1540096, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x25000) = 0x7ff0d195a000
     0.000052 mmap(0x7ff0d1ad2000, 303104, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x19d000) = 0x7ff0d1ad2000
     0.000041 mmap(0x7ff0d1b1c000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x1e6000) = 0x7ff0d1b1c000
     0.000045 mmap(0x7ff0d1b22000, 13656, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7ff0d1b22000
     0.000042 close(6)                  = 0
     0.000053 arch_prctl(ARCH_SET_FS, 0x7ff0d1b27540) = 0
     0.000094 mprotect(0x7ff0d1b1c000, 12288, PROT_READ) = 0
     0.000044 mprotect(0x55ca3ae52000, 4096, PROT_READ) = 0
     0.000037 mprotect(0x7ff0d1b71000, 4096, PROT_READ) = 0
     0.000037 munmap(0x7ff0d1b28000, 118032) = 0
     0.000090 fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x1), ...}) = 0
     0.000074 brk(NULL)                 = 0x55ca3c68c000
     0.000030 brk(0x55ca3c6ad000)       = 0x55ca3c6ad000
     0.000050 write(1, "Witajcie moi mili ...\0\0\0\1\33\3;@\0\0\0"..., 1024Witajcie moi mili ...@���t$����4����D���\-����d��������4zRx
      ����/D$4���� FJ
D�p���eF�I�E �E(�D0�H8�G@n8A0A(B BB�����) = 1024
     0.000058 write(1, "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"..., 1024) = 1024
     0.000057 write(1, "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"..., 1024) = 1024
     0.000047 write(1, "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"..., 613@
������o�p�
) = 613
     0.000071 write(1, "\0\0\0\0\0\0\0\205\0\0\0\0\0\0\0\v\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0\25"..., 1024�
                                                                                                       �?�     ���������o���o����o�=0Witajcie moi mili ...@���t$����4����D���\-����d��������4zRx
                                                               ����/D$4���� FJ
D�p���eF�I�E �E(�D0�H8�G@n8A0A(B BB�����) = 1024                              �?:*3$"\����tx����Y���3E�C
     0.000183 write(1, "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"..., 1024) = 1024
     0.000055 write(1, "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"..., 1024) = 1024
     0.000050 write(1, "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"..., 1024@�:�U�:�U
������o���:�Up��:�U���:�U
) = 1024
     0.000052 write(1, "\0\0\0\0\0\0\0\205\0\0\0\0\0\0\0\v\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0\25"..., 1024�
                                                                                                       `1����/�:�U��:�U(��:�� ���������o���o���:�U���o�=�����������0�:�U�:�U) = 1024
     0.000053 write(1, "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"..., 1024) = 1024
     0.000052 write(1, "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"..., 1024) = 1024
     0.000050 write(1, "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"..., 1024) = 1024
     0.019096 --- SIGSEGV {si_signo=SIGSEGV, si_code=SEGV_MAPERR, si_addr=0x55ca3ae54000} ---
     0.143114 +++ killed by SIGSEGV (core dumped) +++
Segmentation fault (core dumped)


Jak widać na samym końcu program został zatrzymany przez sygnał SISEGV , który zgłosił segmentation fault.
Spowodowany jest to brakiem kontroli nad iteracją w pętli, która zaczęła wyświetlać kolejne znaki, które
były poza zakresem zmiennej napis.